// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: entries.sql

package db

import (
	"context"
)

const createEntry = `-- name: CreateEntry :one
insert into entries (amount, direction, transaction_id, account_id)
values ($1, $2, $3, $4)
returning id, uuid, created_at, updated_at, amount, direction, transaction_id, account_id
`

type CreateEntryParams struct {
	Amount        int64
	Direction     EntryDirection
	TransactionID int64
	AccountID     int64
}

func (q *Queries) CreateEntry(ctx context.Context, arg CreateEntryParams) (Entry, error) {
	row := q.db.QueryRow(ctx, createEntry,
		arg.Amount,
		arg.Direction,
		arg.TransactionID,
		arg.AccountID,
	)
	var i Entry
	err := row.Scan(
		&i.ID,
		&i.Uuid,
		&i.CreatedAt,
		&i.UpdatedAt,
		&i.Amount,
		&i.Direction,
		&i.TransactionID,
		&i.AccountID,
	)
	return i, err
}

const getEntry = `-- name: GetEntry :one
select id, uuid, created_at, updated_at, amount, direction, transaction_id, account_id
from entries
where id = $1
limit 1
`

func (q *Queries) GetEntry(ctx context.Context, id int64) (Entry, error) {
	row := q.db.QueryRow(ctx, getEntry, id)
	var i Entry
	err := row.Scan(
		&i.ID,
		&i.Uuid,
		&i.CreatedAt,
		&i.UpdatedAt,
		&i.Amount,
		&i.Direction,
		&i.TransactionID,
		&i.AccountID,
	)
	return i, err
}
