// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0

package db

import (
	"context"
)

type Querier interface {
	//CreateAccount
	//
	//     insert into accounts (name, type, metadata, ledger_id)
	//     values ($1, $2, $3, $4)
	//  returning id, uuid, created_at, updated_at, name, type, metadata, ledger_id
	CreateAccount(ctx context.Context, arg CreateAccountParams) (Account, error)
	//CreateEntry
	//
	//  insert into entries (amount, direction, transaction_id, account_id)
	//  values ($1, $2, $3, $4)
	//  returning id, uuid, created_at, updated_at, amount, direction, transaction_id, account_id
	CreateEntry(ctx context.Context, arg CreateEntryParams) (Entry, error)
	//CreateLedger
	//
	//     insert into ledgers (name, description, metadata)
	//     values ($1, $2, $3)
	//  returning id, uuid, created_at, updated_at, name, description, metadata
	CreateLedger(ctx context.Context, arg CreateLedgerParams) (Ledger, error)
	//CreateTransaction
	//
	//     insert into transactions (description, metadata, ledger_id)
	//     values ($1, $2, $3)
	//  returning id, uuid, created_at, updated_at, status, date, description, metadata, ledger_id
	CreateTransaction(ctx context.Context, arg CreateTransactionParams) (Transaction, error)
	//GetAccount
	//
	//  select id, uuid, created_at, updated_at, name, type, metadata, ledger_id
	//    from accounts
	//   where id = $1
	//   limit 1
	GetAccount(ctx context.Context, id int64) (Account, error)
	//GetEntry
	//
	//  select id, uuid, created_at, updated_at, amount, direction, transaction_id, account_id
	//  from entries
	//  where id = $1
	//  limit 1
	GetEntry(ctx context.Context, id int64) (Entry, error)
	//GetLedger
	//
	//  select id, uuid, created_at, updated_at, name, description, metadata
	//    from ledgers
	//   where id = $1
	//   limit 1
	GetLedger(ctx context.Context, id int64) (Ledger, error)
	//GetTransaction
	//
	//  select id, uuid, created_at, updated_at, status, date, description, metadata, ledger_id
	//    from transactions
	//   where id = $1
	//   limit 1
	GetTransaction(ctx context.Context, id int64) (Transaction, error)
	//ListLedgers
	//
	//  select id, uuid, created_at, updated_at, name, description, metadata
	//    from ledgers
	//   where metadata @> $1::jsonb
	ListLedgers(ctx context.Context, dollar_1 []byte) ([]Ledger, error)
}

var _ Querier = (*Queries)(nil)
